{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Repos\\\\nugatory-react\\\\react-basics\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Country from './components/Country';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      countries: [{\n        id: 2,\n        name: 'China',\n        gold: 3,\n        silver: 2,\n        bronze: 1\n      }, {\n        id: 1,\n        name: 'United States',\n        gold: 2,\n        silver: 3,\n        bronze: 5\n      }, {\n        id: 3,\n        name: 'Germany',\n        gold: 1,\n        silver: 0,\n        bronze: 2\n      }],\n      medals: [{\n        id: 1,\n        name: 'gold'\n      }, {\n        id: 2,\n        name: 'silver'\n      }, {\n        id: 3,\n        name: 'bronze'\n      }]\n    };\n\n    this.addMedalCount = (countryId, medalName) => {\n      const countries = [...this.state.countries];\n      const idx = countries.findIndex(c => c.id === countryId);\n      countries[idx][medalName] += 1;\n      this.setState({\n        countries: countries\n      });\n    };\n\n    this.decreaseMedalCount = (countryId, medalName) => {\n      const countries = [...this.state.countries];\n      const idx = countries.findIndex(c => c.id === countryId);\n\n      if (countries[idx][medalName] > 0) {\n        countries[idx][medalName] -= 1;\n        this.setState({\n          countries: countries\n        });\n      }\n    };\n  }\n\n  AllMedalsTotal() {\n    let sum = 0;\n    this.state.medals.forEach(medal => {\n      sum += this.state.countries.reduce((a, b) => a + b[medal.name], 0);\n    });\n    return sum;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"centerContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fixed: true,\n          style: {\n            paddingTop: '70px',\n            paddingBottom: '20px',\n            paddingRight: '80px',\n            paddingLeft: '80px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            spacing: 2,\n            justifyContent: \"center\",\n            container: true,\n            children: this.state.countries.map(country => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Country, {\n                country: country,\n                medals: this.state.medals,\n                addMedalCount: this.addMedalCount,\n                decreaseMedalCount: this.decreaseMedalCount\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 13\n              }, this)\n            }, country.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bottomBox\",\n          children: [\"Total Cumulative Medals Won: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", this.AllMedalsTotal(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/Repos/nugatory-react/react-basics/src/App.js"],"names":["React","Component","Country","Grid","Container","App","state","countries","id","name","gold","silver","bronze","medals","addMedalCount","countryId","medalName","idx","findIndex","c","setState","decreaseMedalCount","AllMedalsTotal","sum","forEach","medal","reduce","a","b","render","paddingTop","paddingBottom","paddingRight","paddingLeft","map","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Country from './components/Country';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n\nclass App extends Component {\n\n  state = {\n    countries: [\n      { id: 2, name: 'China', gold: 3, silver: 2, bronze: 1 },\n      { id: 1, name: 'United States', gold: 2, silver: 3, bronze: 5 },\n      { id: 3, name: 'Germany', gold: 1, silver: 0, bronze: 2 },\n    ],\n    medals: [\n      { id: 1, name: 'gold' },\n      { id: 2, name: 'silver' },\n      { id: 3, name: 'bronze' },\n    ]\n  }\n\n  addMedalCount = (countryId, medalName) => {\n    const countries = [ ...this.state.countries ];\n    const idx = countries.findIndex(c => c.id === countryId);\n\n    countries[idx][medalName] += 1;\n    this.setState({ countries: countries });\n  }\n  decreaseMedalCount = (countryId, medalName) => {\n    const countries = [ ...this.state.countries ];\n    const idx = countries.findIndex(c => c.id === countryId);\n\n    if( countries[idx][medalName] > 0 ) {\n      countries[idx][medalName] -= 1;\n      this.setState({ countries: countries });\n    }\n\n  }\n  AllMedalsTotal() {\n    let sum = 0;\n    this.state.medals.forEach(medal => { \n      sum += this.state.countries.reduce((a, b) => a + b[medal.name], 0); \n    });\n    return sum;\n  }\n\n\n\n  render() { \n\n    return ( \n      <div id=\"centerContent\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header> \n\n        <Container fixed={true} style={{paddingTop: '70px', paddingBottom: '20px', paddingRight: '80px', paddingLeft: '80px'}}>\n          <Grid spacing={2} justifyContent='center' container>\n          { this.state.countries.map(country => \n            <Grid item key={ country.id }>\n            <Country \n              key={ country.id } \n              country={ country }\n              medals={ this.state.medals }\n              addMedalCount={ this.addMedalCount } \n              decreaseMedalCount={ this.decreaseMedalCount }\n            />\n            </Grid>\n            )}\n          </Grid>\n        </Container>\n\n        <div id=\"bottomBox\"> \n        Total Cumulative Medals Won: <b> { this.AllMedalsTotal() } </b>\n        </div>\n\n      </div>\n      </div>\n     );\n  }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}